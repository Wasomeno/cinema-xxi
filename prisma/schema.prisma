generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Region {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  regionAdmins        String[]
  cinema       Cinema[]
  transactions Transaction[]
}

model Cinema {
  id           Int           @id @default(autoincrement())
  regionId     Int
  name         String        @db.VarChar(255)
  admins        String[]
  region       Region        @relation(fields: [regionId], references: [id])
  seats        Seats[]
  showtimes    Showtime[]
  studio       Studio[]
  transactions Transaction[]
  movie        Movie[]       @relation("CinemaToMovie")
}

model Studio {
  id       Int        @id @default(autoincrement())
  cinemaId Int
  studio   Int
  capacity Int
  showtime Showtime[]
  cinema   Cinema     @relation(fields: [cinemaId], references: [id], onDelete: Cascade)
}

model Showtime {
  id            Int     @id @default(autoincrement())
  cinemaId      Int
  movieId       Int?
  studioId      Int?
  time          Int
  showtimeSeats Seats[]
  cinema        Cinema  @relation(fields: [cinemaId], references: [id], onDelete: Cascade)
  movie         Movie?  @relation(fields: [movieId], references: [id], onDelete: Cascade)
  studio        Studio? @relation(fields: [studioId], references: [id], onDelete: Cascade)
}

model Movie {
  id            Int           @id @default(autoincrement())
  duration      Int
  casts         String[]      @db.VarChar(255)
  synopsis      String
  title         String        @db.VarChar(255)
  watchedAmount Int
  showtime      Showtime[]
  transactions  Transaction[]
  cinema        Cinema[]      @relation("CinemaToMovie")
}

model User {
  id           Int           @id @default(autoincrement())
  address      String        @unique
  name         String
  transactions Transaction[]
}

model Transaction {
  id          Int      @id @default(autoincrement())
  user        String
  total       Float
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  ticketIds   String[]
  cinemaId    Int
  movieId     Int
  regionId    Int
  showtime    BigInt
  studio      Int
  cinema      Cinema   @relation(fields: [cinemaId], references: [id])
  movie       Movie    @relation(fields: [movieId], references: [id])
  region      Region   @relation(fields: [regionId], references: [id])
  userDetails User     @relation(fields: [user], references: [address])
}

model SeatsDates {
  id    Int     @id @default(autoincrement())
  date  Int     @unique
  month Int
  year  Int
  seats Seats[]
}

model Seats {
  id          Int        @id @default(autoincrement())
  showtimeId  Int
  cinemaId    Int
  seatsTaken  Int[]
  seatsDateId Int
  cinema      Cinema     @relation(fields: [cinemaId], references: [id])
  seatsDates  SeatsDates @relation(fields: [seatsDateId], references: [id])
  showtime    Showtime   @relation(fields: [showtimeId], references: [id])
}
